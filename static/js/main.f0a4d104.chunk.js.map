{"version":3,"sources":["components/Info.js","components/Main.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["OutlinedCard","props","Card","className","variant","CardContent","Typography","gutterBottom","carrierOutbound","carrierInbound","component","originName","destinationName","departureOutboundDate","departureInboundDate","nonStop","currencySymbol","price","placeFinder","arr","id","n","length","i","PlaceId","carrierFinder","CarrierId","InfoWrapper","areRoutes","route","Quotes","map","quote","carrierInboundId","carrierInboundIndex","OutboundLeg","DepartureDate","slice","originId","OriginId","carrierOutboundId","CarrierIds","destinationId","DestinationId","originIndex","Places","destinationIndex","carrierOutboundIndex","Carriers","Name","Type","CityName","IataCode","hasOwnProperty","InboundLeg","Direct","Currencies","Symbol","MinPrice","QuoteId","Info","copyResponse","sortOption","value","reverse","reqOptions","method","headers","process","useQueryString","BlueSwitch","withStyles","switchBase","color","backgroundColor","checked","track","Switch","BlueButton","theme","root","Button","Main","dateToString","date","yyyy","getFullYear","mm","getMonth","dd","getDate","useState","origin","setOrigin","destination","setDestination","airportOrigin","setAirportOrigin","airportDestination","setAirportDestination","currency","setCurrency","currencies","setCurrencies","showRoutes","setShowRoutes","Date","originDate","setOriginDate","obpDate","setObpDate","ibpDate","setIbpDate","slider","setSlider","destDate","setDestDate","routeResponse","setRouteResponse","setAreRoutes","setSortOption","useEffect","a","fetch","response","json","newArray","item","Code","label","console","log","fetchCurrencies","options","onInputChange","inputValue","URLSearchParams","query","PlaceName","fetchOrigin","onChange","isSearchable","placeholder","fetchDestination","style","width","returnValue","fullDate","FormControlLabel","control","name","defaultValue","margin","onClick","message","Error","fetchRoute","Header","title","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0a4d104.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Info.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst OutlinedCard = (props) => {\n  return (\n    <div>\n      <Card className=\"root\" variant=\"outlined\">\n        <CardContent className={props.className}>\n          <Typography className=\"title\" gutterBottom>\n            {props.carrierOutbound}{\" \"}\n            {props.carrierInbound === \"\" ? (\n              <></>\n            ) : (\n              ` -- ${props.carrierInbound}`\n            )}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {`${props.originName} to ${props.destinationName}`}\n          </Typography>\n          <Typography className=\"pos\">\n            {`Departure Date: ${props.departureOutboundDate}`}{\" \"}\n            {props.departureInboundDate !== \"\" ? (\n              ` Arrival Date: ${props.departureInboundDate}`\n            ) : (\n              <></>\n            )}{\" \"}\n            {props.nonStop ? \" (Nonstop)\" : \"\"}\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\">\n            {props.currencySymbol + props.price}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nconst placeFinder = (arr, id) => {\n  let n = arr.length;\n  let i = 0;\n  for (i = 0; i < n; i++) {\n    if (arr[i].PlaceId === id) {\n      return i;\n    }\n  }\n  return null;\n};\n\nconst carrierFinder = (arr, id) => {\n  let n = arr.length;\n  let i = 0;\n  for (i = 0; i < n; i++) {\n    if (arr[i].CarrierId === id) {\n      return i;\n    }\n  }\n  return null;\n};\n\nconst InfoWrapper = (props) => {\n  return (\n    <>\n      {props.areRoutes ? (\n        props.route.Quotes.map((quote) => {\n          let departureOutboundDate = quote.OutboundLeg.DepartureDate.slice(\n            0,\n            10\n          );\n          let originId = quote.OutboundLeg.OriginId;\n          let carrierOutboundId = quote.OutboundLeg.CarrierIds[0];\n          let destinationId = quote.OutboundLeg.DestinationId;\n          let originIndex = placeFinder(props.route.Places, originId);\n          let destinationIndex = placeFinder(props.route.Places, destinationId);\n          let carrierOutboundIndex = carrierFinder(\n            props.route.Carriers,\n            carrierOutboundId\n          );\n          let carrierOutbound = props.route.Carriers[carrierOutboundIndex].Name;\n          let carrierInboundId;\n          let carrierInboundIndex;\n          let carrierInbound;\n          let departureInboundDate;\n          let originName;\n          let destinationName;\n\n          if (props.route.Places[originIndex].Type !== \"Station\") {\n            originName = props.route.Places[originIndex].Name;\n          } else {\n            originName = `${props.route.Places[originIndex].CityName} (${props.route.Places[originIndex].IataCode})`;\n          }\n          if (props.route.Places[destinationIndex].Type !== \"Station\") {\n            destinationName = props.route.Places[destinationIndex].Name;\n          } else {\n            destinationName = `${props.route.Places[destinationIndex].CityName} (${props.route.Places[destinationIndex].IataCode})`;\n          }\n          if (quote.hasOwnProperty(\"InboundLeg\")) {\n            departureInboundDate = quote.InboundLeg.DepartureDate.slice(0, 10);\n            carrierInboundId = quote.InboundLeg.CarrierIds[0];\n          } else {\n            departureInboundDate = \"\";\n            carrierInboundId = null;\n          }\n          if (carrierInboundId) {\n            carrierInboundIndex = carrierFinder(\n              props.route.Carriers,\n              carrierInboundId\n            );\n            carrierInbound = props.route.Carriers[carrierInboundIndex].Name;\n            if (carrierInbound === carrierOutbound) {\n              carrierInbound = \"\";\n            }\n          } else {\n            carrierInbound = \"\";\n          }\n\n          return (\n            <OutlinedCard\n              key={quote.QuoteId}\n              originName={originName}\n              destinationName={destinationName}\n              carrierOutbound={carrierOutbound}\n              carrierInbound={carrierInbound}\n              departureOutboundDate={departureOutboundDate}\n              departureInboundDate={departureInboundDate}\n              nonStop={quote.Direct}\n              currencySymbol={props.route.Currencies[0].Symbol}\n              price={quote.MinPrice}\n              className={quote.QuoteId === 1 ? \"mini\" : \"\"}\n            />\n          );\n        })\n      ) : (\n        <Typography variant=\"h5\">No Routes Available</Typography>\n      )}\n    </>\n  );\n};\n\nconst Info = (props) => {\n  let copyResponse = { ...props.route };\n  if (props.sortOption.value === \"highest\") {\n    copyResponse.Quotes = props.route.Quotes.slice(0).reverse();\n  }\n  return <InfoWrapper areRoutes={props.areRoutes} route={copyResponse} />;\n};\n\nexport default Info;\n","import React, { useState, useEffect } from \"react\";\nimport Info from \"./Info\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-date-picker\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"./Main.css\";\n\nconst reqOptions = {\n  method: \"GET\",\n  headers: {\n    \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n    useQueryString: true,\n  },\n};\n\nconst BlueSwitch = withStyles({\n  switchBase: {\n    color: \"white\",\n    \"&$checked\": {\n      color: \"#013d5b\",\n    },\n    \"&$checked + $track\": {\n      backgroundColor: \"#013d5b\",\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst BlueButton = withStyles((theme) => ({\n  root: {\n    color: \"white\",\n    backgroundColor: \"#013d5b\",\n    \"&:hover\": {\n      backgroundColor: \"#002a40\",\n    },\n  },\n}))(Button);\n\nconst Main = () => {\n  const dateToString = (date) => {\n    let yyyy = date.getFullYear();\n    let mm = date.getMonth() + 1;\n    let dd = date.getDate();\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    let fullDate = `${yyyy}-${mm}-${dd}`;\n    return fullDate;\n  };\n  const [origin, setOrigin] = useState([]);\n  const [destination, setDestination] = useState([]);\n  const [airportOrigin, setAirportOrigin] = useState(\"\");\n  const [airportDestination, setAirportDestination] = useState(\"\");\n  const [currency, setCurrency] = useState(\"USD\");\n  const [currencies, setCurrencies] = useState([]);\n  const [showRoutes, setShowRoutes] = useState(false);\n  const [originDate, setOriginDate] = useState(new Date());\n  const [obpDate, setObpDate] = useState(dateToString(new Date()));\n  const [ibpDate, setIbpDate] = useState(\"\");\n  const [slider, setSlider] = useState(false);\n  const [destDate, setDestDate] = useState(new Date());\n  const [routeResponse, setRouteResponse] = useState({});\n  const [areRoutes, setAreRoutes] = useState(true);\n  const [sortOption, setSortOption] = useState(\"lowest\");\n\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      try {\n        let response = await fetch(\n          \"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/reference/v1.0/currencies\",\n          reqOptions\n        );\n        response = await response.json();\n        const newArray = response.Currencies.map((item) => {\n          return { value: item.Code, label: item.Code };\n        });\n        setCurrencies(newArray);\n      } catch (error) {\n        console.log(error);\n        setCurrencies([{ value: \"USD\", label: \"USD\" }]);\n      }\n    };\n    fetchCurrencies();\n  }, []);\n\n  const handleChangeOrigin = (inputValue) => {\n    const fetchOrigin = async () => {\n      try {\n        if (inputValue !== \"\") {\n          let response = await fetch(\n            `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/${currency}/en-US/?` +\n              new URLSearchParams({ query: inputValue }),\n            reqOptions\n          );\n          response = await response.json();\n          const newArray = response.Places.map((item) => {\n            return { value: item.PlaceId, label: item.PlaceName };\n          });\n          setOrigin(newArray);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchOrigin();\n  };\n  const handleChangeDestination = (inputValue) => {\n    const fetchDestination = async () => {\n      try {\n        if (inputValue !== \"\") {\n          let response = await fetch(\n            `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/${currency}/en-US/?` +\n              new URLSearchParams({ query: inputValue }),\n            reqOptions\n          );\n          response = await response.json();\n          const newArray = response.Places.map((item) => {\n            return { value: item.PlaceId, label: item.PlaceName };\n          });\n          setDestination(newArray);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDestination();\n  };\n\n  const handleOnClick = () => {\n    const fetchRoute = async () => {\n      try {\n        let response = await fetch(\n          `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/${currency}/en-US/${airportOrigin}/${airportDestination}/${obpDate}/${ibpDate}`,\n          reqOptions\n        );\n        response = await response.json();\n        //console.log(response);\n        if (response.message) {\n          //console.log(\"Error was received\");\n          throw new Error(\"No Response\");\n        }\n        setRouteResponse(response);\n        setShowRoutes(true);\n        if (response.Quotes.length < 1) {\n          setAreRoutes(false);\n        } else {\n          setAreRoutes(true);\n        }\n      } catch (error) {\n        console.log(error);\n        setAreRoutes(false);\n        setShowRoutes(true);\n      }\n    };\n    fetchRoute();\n  };\n\n  const handleOriginDateChange = (returnValue) => {\n    setOriginDate(returnValue);\n    if (returnValue !== null) {\n      let fullDate = dateToString(returnValue);\n      setObpDate(fullDate);\n    } else {\n      setObpDate(\"anytime\");\n    }\n  };\n\n  const handleDestDateChange = (returnValue) => {\n    setDestDate(returnValue);\n    if (returnValue !== null) {\n      let fullDate = dateToString(returnValue);\n      setIbpDate(fullDate);\n    } else {\n      setIbpDate(\"anytime\");\n    }\n  };\n\n  const handleSlider = () => {\n    setSlider(!slider);\n    if (!slider) {\n      setIbpDate(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"main\">\n        <div className=\"container1\">\n          <div className=\"dropdownPlace\">\n            <Select\n              options={origin}\n              onInputChange={handleChangeOrigin}\n              onChange={(inputValue) => setAirportOrigin(inputValue.value)}\n              isSearchable={true}\n              placeholder=\"Origin\"\n            >\n              Origin\n            </Select>\n          </div>\n          <div className=\"dropdownPlace\">\n            <Select\n              options={destination}\n              onInputChange={handleChangeDestination}\n              onChange={(inputValue) => setAirportDestination(inputValue.value)}\n              isSearchable={true}\n              placeholder=\"Destination\"\n            >\n              Destination\n            </Select>\n          </div>\n          <div className=\"datePicker\">\n            <label style={{ width: \"50px\" }}>Outbound Date: </label>\n            <DatePicker\n              onChange={handleOriginDateChange}\n              value={originDate}\n            ></DatePicker>\n          </div>\n          {slider ? (\n            <div className=\"datePicker\">\n              <label style={{ width: \"50px\" }}>Inbound Date: </label>\n              <DatePicker\n                value={destDate}\n                onChange={handleDestDateChange}\n              ></DatePicker>\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n        <br />\n        <div className=\"container2\">\n          <div className=\"switch\">\n            <FormControlLabel\n              control={\n                <BlueSwitch\n                  checked={slider}\n                  onChange={handleSlider}\n                  name=\"slider\"\n                />\n              }\n              label=\"Round Trip?\"\n            />\n          </div>\n          <div className=\"dropdownSecondary\">\n            <Select\n              options={currencies}\n              onChange={(inputValue) => setCurrency(inputValue.value)}\n              isSearchable={true}\n              defaultValue={currency}\n              placeholder=\"Currency\"\n            ></Select>\n          </div>\n          <div className=\"dropdownSecondary\">\n            <Select\n              options={[\n                { value: \"lowest\", label: \"Lowest\" },\n                { value: \"highest\", label: \"Highest\" },\n              ]}\n              onChange={setSortOption}\n              isSearchable={false}\n              defaultValue={sortOption}\n              placeholder=\"Sort Prices\"\n            ></Select>\n          </div>\n          <div style={{ margin: \"5px\" }}>\n            <BlueButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleOnClick}\n            >\n              Find Flight\n            </BlueButton>\n          </div>\n        </div>\n        <br />\n        {showRoutes ? (\n          <Info\n            route={routeResponse}\n            areRoutes={areRoutes}\n            sortOption={sortOption}\n          ></Info>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./Header.css\";\nimport { IoMdAirplane } from \"react-icons/io\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      {props.title} <IoMdAirplane />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = (props) => {\n  return <div className=\"footer\">{props.title}</div>;\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport React from \"react\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Flight Finder\" />\n      <Main />\n      <Footer title=\"2021\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}